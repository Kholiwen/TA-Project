<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="CSSDataSet1" targetNamespace="http://tempuri.org/CSSDataSet1.xsd" xmlns:mstns="http://tempuri.org/CSSDataSet1.xsd" xmlns="http://tempuri.org/CSSDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CSSConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CSSConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.TA_Project.Properties.Settings.GlobalReference.Default.CSSConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="segmentStrategyTableAdapter" GeneratorDataComponentClassName="segmentStrategyTableAdapter" Name="segmentStrategy" UserDataComponentName="segmentStrategyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CSSConnectionString (Settings)" DbObjectName="CSS.dbo.segmentStrategy" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[segmentStrategy] WHERE (([segmentID] = @Original_segmentID) AND ([segmentName] = @Original_segmentName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_segmentID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="segmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_segmentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="segmentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[segmentStrategy] ([segmentID], [segmentName], [Strategy]) VALUES (@segmentID, @segmentName, @Strategy)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@segmentID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="segmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@segmentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="segmentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Strategy" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Strategy" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT segmentID, segmentName, Strategy
 FROM dbo.segmentStrategy</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[segmentStrategy] SET [segmentID] = @segmentID, [segmentName] = @segmentName, [Strategy] = @Strategy WHERE (([segmentID] = @Original_segmentID) AND ([segmentName] = @Original_segmentName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@segmentID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="segmentID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@segmentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="segmentName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Strategy" Precision="0" ProviderType="Text" Scale="0" Size="0" SourceColumn="Strategy" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int16" Direction="Input" ParameterName="@Original_segmentID" Precision="0" ProviderType="SmallInt" Scale="0" Size="0" SourceColumn="segmentID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_segmentName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="segmentName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="segmentID" DataSetColumn="segmentID" />
              <Mapping SourceColumn="segmentName" DataSetColumn="segmentName" />
              <Mapping SourceColumn="Strategy" DataSetColumn="Strategy" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="CSSDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="CSSDataSet1" msprop:Generator_UserDSName="CSSDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="segmentStrategy" msprop:Generator_TableClassName="segmentStrategyDataTable" msprop:Generator_TableVarName="tablesegmentStrategy" msprop:Generator_TablePropName="segmentStrategy" msprop:Generator_RowDeletingName="segmentStrategyRowDeleting" msprop:Generator_RowChangingName="segmentStrategyRowChanging" msprop:Generator_RowEvHandlerName="segmentStrategyRowChangeEventHandler" msprop:Generator_RowDeletedName="segmentStrategyRowDeleted" msprop:Generator_UserTableName="segmentStrategy" msprop:Generator_RowChangedName="segmentStrategyRowChanged" msprop:Generator_RowEvArgName="segmentStrategyRowChangeEvent" msprop:Generator_RowClassName="segmentStrategyRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="segmentID" msprop:Generator_ColumnVarNameInTable="columnsegmentID" msprop:Generator_ColumnPropNameInRow="segmentID" msprop:Generator_ColumnPropNameInTable="segmentIDColumn" msprop:Generator_UserColumnName="segmentID" type="xs:short" />
              <xs:element name="segmentName" msprop:Generator_ColumnVarNameInTable="columnsegmentName" msprop:Generator_ColumnPropNameInRow="segmentName" msprop:Generator_ColumnPropNameInTable="segmentNameColumn" msprop:Generator_UserColumnName="segmentName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Strategy" msprop:Generator_ColumnVarNameInTable="columnStrategy" msprop:Generator_ColumnPropNameInRow="Strategy" msprop:Generator_ColumnPropNameInTable="StrategyColumn" msprop:Generator_UserColumnName="Strategy" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:segmentStrategy" />
      <xs:field xpath="mstns:segmentID" />
    </xs:unique>
  </xs:element>
</xs:schema>